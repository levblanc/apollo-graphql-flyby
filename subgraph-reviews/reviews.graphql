extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])

type Query {
  "The three latest reviews submitted for FlyBy's locations"
  latestReviews: [Review!]!
}

type Review {
  id: ID!
  "Written text"
  comment: String
  "A number from 1 - 5 with 1 being lowest and 5 being highest"
  rating: Int
  "The location the review is about"
  location: Location
}

# ====== [Reference] - Code updated below ======
# Reviews subgraph is not responsible for resolving
# any other fields of the Location entity
# Setting "resolvable" to `false` tells the router that
# this subgraph doesn't define a reference resolver for
# this entity

# type Location @key(fields: "id", resolvable: false) {
#   id: ID!
# }
# ====== [Reference] - Code updated below ======

# By default, a subgraph should only contribute fields
# that aren't defined by other subgraphs
# with the exception of the primary key field

# This means, because the Locations subgraph defineds
# `name`, `description` & `photo` as fields for the Location type
# We won't and shouldn't define those fields here in the Reviews subgraph

# Because we now want the Reviews subgraph to contribute new fields to
# the Location definition, we need to remove the `resolvable: false` property
# This will enable Reviews subgraph to define and resolve its own Location fields

type Location @key(fields: "id") {
  id: ID!
  "The calculated overall rating based on all reviews"
  overallRating: Float
  "All submitted reviews about this location"
  reviewsForLocation: [Review]!
}

type Mutation {
  submitReview(locationReview: LocationReviewInput): SubmitReviewResponse
}

input LocationReviewInput {
  "Written text"
  comment: String!
  "A number from 1 - 5 with 1 being lowest and 5 being highest"
  rating: Int!
  "Location Id"
  locationId: String!
}

type SubmitReviewResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "Newly created review"
  locationReview: Review
}
